services:
  be-contact-form:
    build:
      context: ./be-contact-form
      dockerfile: ./Dockerfile.dev
      target: development

    env_file:
      - ./be-contact-form/.env
    depends_on:
      db: 
        condition: service_healthy
      traefik:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./be-contact-form:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '9000:9000'
  be-auth:
    build:
      context: ./be-auth
      dockerfile: ./Dockerfile.dev
      target: development

    env_file:
      - ./be-auth/.env
    depends_on:
      db: 
        condition: service_healthy
      traefik:
        condition: service_started
      rabbitmq:
        condition: service_healthy

    volumes:
      - ./be-auth:/usr/src/app/
      - /usr/src/app/node_modules
    ports:
      - '9001:9001'
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 80s  
  traefik:
    image: traefik:v2.5
    container_name: traefik
    ports:
      - 80:80
      - 443:443
      # - 8080:8080  # (optional) expose the dashboard !don't use in production!
    volumes:
      - ./traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
  rabbitmq:
    image: rabbitmq:3.12.1-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 30s
      retries: 3

volumes:
  db:
    driver: local
networks:
  default:
    driver: bridge

      